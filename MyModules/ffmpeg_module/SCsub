#!/usr/bin/env python

Import("env")
Import("env_modules")

my_env = env_modules.Clone()

module_obj = []

include_paths = []
libs = [
    "avcodec",
    "avformat",
    "avutil",
    "swscale",
    "swresample",
]

libpath = []

if env["platform"] == "android":
    include_paths.append("#../Thirdparty/ffmpeg/Android-armv8a/include")
    libpath.append("#../Thirdparty/ffmpeg/Android-armv8a/lib")
elif env["platform"] == "macos":
    include_paths.append("/usr/local/include")
    libpath.append("/usr/local/lib")
elif env["platform"] == "windows":
    include_paths.append("#../Thirdparty/ffmpeg/Win64/include")
    libpath.append("#../Thirdparty/ffmpeg/Win64/lib")


my_env.add_source_files(module_obj, "*.cpp")
env.modules_sources += module_obj

my_env.Prepend(CPPPATH=include_paths, LIBS=libs, LIBPATH=libpath)
env.Prepend(LIBS=libs, LIBPATH=libpath)

# Needed to force rebuilding the module files when the thirdparty library is updated.
# env.Depends(module_obj, thirdparty_obj)
